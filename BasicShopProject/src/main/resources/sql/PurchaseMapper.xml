<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">	
 					
<mapper namespace="PurchaseMapper">

	<resultMap type="purchase" id="purchaseSelectMap">
  		<result property="tranNo" column="tran_no" jdbcType="NUMERIC"/>
  		<result property="paymentOption" column="payment_option" jdbcType="CHAR"/>
  		<result property="receiverName" column="receiver_name" jdbcType="VARCHAR"/>
  		<result property="receiverPhone" column="receiver_phone" jdbcType="VARCHAR"/>
  		<result property="divyAddr" column="demailaddr" jdbcType="VARCHAR"/>
  		<result property="divyRequest" column="dlvy_request" jdbcType="VARCHAR"/>
  		<result property="tranCode" column="tran_status_code" jdbcType="VARCHAR"/>
  		<result property="orderDate" column="order_data" jdbcType="DATE"/>
  		<result property="divyDate" column="dlvy_date" jdbcType="DATE"/>
  		
  		<association property="purchaseProd"  javaType="product">
			<id property="prodNo" column="prod_no" jdbcType="NUMERIC"/>
			<result property="prodName" column="prod_name" jdbcType="VARCHAR"/>
			<result property="price" column="price" jdbcType="NUMERIC"/>
		</association>
		
		<association property="buyer"  javaType="user">
			<id property="userId" column="buyer_id" jdbcType="VARCHAR"/>
		</association>
  	</resultMap>


  	<insert id="addPurchase" parameterType="purchase">
		INSERT 
		INTO transaction
		VALUES (
					seq_transaction_tran_no.NEXTVAL,
					#{purchaseProd.prodNo},
					#{buyer.userId},
					#{paymentOption:CHAR},
					#{receiverName:VARCHAR},
					#{receiverPhone:VARCHAR},
					#{divyAddr:VARCHAR},
					#{divyRequest:VARCHAR},
					#{tranCode:CHAR},
					SYSDATE,
					#{divyDate:DATE} )
	</insert>
  	
  	<select id="getPurchase" parameterType="int" resultMap="purchaseSelectMap">
  		SELECT *
		FROM transaction
		WHERE tran_no = #{tranNo}
  	</select>
  	
  	<select id="getPurchase2" parameterType="int" resultMap="purchaseSelectMap">
  		SELECT tran_no
		FROM transaction
		WHERE prod_no = #{prodNo}
  	</select>
  	
  	<update id="updatePurchase" parameterType="purchase">
  		UPDATE transaction
  		<set>
  			payment_option = #{paymentOption:CHAR},
  			receiver_name = #{receiverName:VARCHAR},
  			receiver_phone = #{receiverPhone:VARCHAR},
  			demailaddr = #{divyAddr:VARCHAR},
  			dlvy_request = #{divyRequest:VARCHAR},
  			dlvy_date = #{divyDate:DATE}
  		</set>
  		WHERE tran_no = #{tranNo}
  	</update>
  	
  	<update id="updateTranCode" parameterType="purchase">
  		UPDATE transaction
  		<set>
  			tran_status_code = #{tranCode}
  		</set>
  		WHERE tran_no = #{tranNo}
  	</update>
  	
  	<delete id="deletePurchase" parameterType="int">
  		DELETE FROM transaction
  		WHERE prod_no = #{prodNo}
  	</delete>
  	
  	<!-- SQL : SELECT LIST -->
	<select  id="getPurchaseList"  parameterType="map"	resultMap="purchaseSelectMap">
	  	SELECT tran_no, receiver_name, receiver_phone, tran_status_code, prod_name
	  	FROM (	SELECT inner_table.tran_no, inner_table.receiver_name, inner_table.receiver_phone, inner_table.tran_status_code, inner_table.prod_name , ROWNUM AS row_seq
	  					FROM		(	SELECT t.tran_no, t.receiver_name, t.receiver_phone, t.tran_status_code, p.prod_name
											FROM product p, transaction t
											<where>
												buyer_id = #{buyerId}
												AND t.prod_no(+)=p.prod_no
											</where>
											ORDER BY tran_no) inner_table
						WHERE ROWNUM &lt;= #{search.endRowNum} ) outer_table
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 </select>
	 
	 <select  id="getSaleList"  parameterType="search"	resultMap="purchaseSelectMap">
	  	SELECT tran_no, prod_no, prod_name, price, buyer_id, order_data
	  	FROM (	SELECT inner_table.tran_no, inner_table.prod_no, inner_table.prod_name, inner_table.price, inner_table.buyer_id, inner_table.order_data , ROWNUM AS row_seq
	  					FROM		(	SELECT t.tran_no, p.prod_no, p.prod_name, p.price, t.buyer_id, t.order_data
											FROM product p, transaction t
											<where>
												t.prod_no=p.prod_no
												AND t.tran_status_code = '3'
												<if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				AND p.prod_no LIKE '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				AND p.prod_name LIKE '%${searchKeyword}%'
													</if>
												</if>
											</where>
											ORDER BY prod_no) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} ) outer_table
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="string"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT t.tran_no, t.receiver_name, t.receiver_phone, t.tran_status_code, p.prod_name
											FROM product p, transaction t
											<where>
												buyer_id = #{buyerId}
												AND t.prod_no(+)=p.prod_no
											</where>
											ORDER BY tran_no) countTable						
	 </select>
	 
	 <select  id="getSaleCount" resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT p.prod_no, p.prod_name, p.price, t.buyer_id, t.order_data
											FROM product p, transaction t
											<where>
												t.prod_no=p.prod_no
												AND t.tran_status_code = '3'
											</where>
											ORDER BY tran_no) countTable						
	 </select>
	 
</mapper>